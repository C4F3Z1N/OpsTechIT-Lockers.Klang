#!/bin/bash

#HELP	UPS charge and apcupsd report.

print_formatted() { echo "# ${@}" | grep --color ".*"; }

get_json_keys() {

	local ARGS=${@}
	local PARSED="["

	for LINE in $(cat); do
		PARSED="${PARSED}${LINE},"
	done

	PARSED="${PARSED::-1}]"

	python - <<- EOF
		from json import loads
		print "\n".join(["\t".join([str(elem[key]) for key in '${ARGS}'.split()]) for elem in loads('${PARSED}')])
	EOF
}

########## MAIN ##########

LOG_SIZE=${LOG_SIZE:-30}

OUTPUT=$(mktemp)
apcaccess > ${OUTPUT}

sudo service apcupsd restart
echo

KEY="UPSBatteryPercentMetric"
print_formatted ${KEY}
grep -h "INFO.*${KEY}" /usr/local/kioskmonitoringtools/kioskwatcher.log* \
	| grep -o "{.*}" | get_json_keys "timestamp" "percent" \
	| awk '{print strftime("%F %H:%M:%S",$1)"\tBCHARGE: "$2"%"}' \
	| sort | tail -n ${LOG_SIZE}
echo

print_formatted "apcupsd.events"
grep -ahi  "battery\|failure\|reached\|running\|shutdown\|startup" /var/log/apcupsd.events* \
	| sort | tail -n ${LOG_SIZE}
echo

print_formatted "apcaccess"
grep --color "STATUS\|BCHARGE\|" ${OUTPUT}
TIMELEFT=$(grep "TIMELEFT" ${OUTPUT} | grep -o '[0-9.]*')
if (( ${TIMELEFT%.*} > 300 )); then
	echo
	print_formatted "*** UPS ALARM ***"
	echo "- Please ask the field engineer to connect the power strip to the UPS port labeled \"MASTER\". It is currently connected to the \"Controlled by MASTER\"."
	sleep $(( LOG_SIZE / 7 + 1 ))
fi
