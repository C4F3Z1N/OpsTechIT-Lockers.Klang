#!/bin/bash

#HELP	UPS charge and apcupsd report.

print_colored() { echo "# ${@}" | grep --color ".*"; }

no_subsequent_repetition() {

	local IFS=$'\n'

	local KEY=${@}
	local PREVIOUS

	for CURRENT in $(cat); do

		if [[ ${PREVIOUS} != *$(grep -o ${KEY} <<< ${CURRENT})* ]]; then
			echo ${CURRENT}
		fi

		PREVIOUS=${CURRENT}
	done
}

get_json_keys() {

	local ARGS=${@}
	local PARSED="["

	for LINE in $(cat); do
		PARSED="${PARSED}${LINE},"
	done

	PARSED="${PARSED::-1}]"

	python - <<- EOF
		from json import loads
		print "\n".join(["\t".join([str(elem[key]) for key in '${ARGS}'.split()]) for elem in loads('${PARSED}')])
	EOF
}

########## MAIN ##########

cd $(mktemp -d --suffix=".klang-$(basename ${0})")

LOG_SIZE=${LOG_SIZE:-30}
DAYS_AGO=${DAYS_AGO:-$(( LOG_SIZE / 10 + 1 ))}

KEY="UPSBatteryPercentMetric"
{ zgrep -ah "INFO.*${KEY}" \
	$(find {/tmp/kiosklogpusher/backup,/usr/local/kioskmonitoringtools}/kioskwatcher.log* -mtime -${DAYS_AGO}) \
	| grep -o "{.*}" | get_json_keys "timestamp" "percent" \
	| awk '{print strftime("%F %H:%M:%S",$1)"\tBCHARGE: "$2"%"}' \
	| sort > raw.log & } &> /dev/null

sudo service apcupsd restart
echo

print_colored "apcupsd.events"
grep -ahi  "battery\|failure\|reached\|running\|shutdown\|startup" /var/log/apcupsd.events* \
	| sort | tail -n ${LOG_SIZE}
echo

wait &> /dev/null
print_colored ${KEY}
cat raw.log | no_subsequent_repetition "BCHARGE.*" > filtered.log
if (( $(wc -l < filtered.log) > 1 )); then
	mv filtered.log result.log
else
	mv raw.log result.log
fi
tail -n ${LOG_SIZE} result.log
echo

print_colored "apcaccess"
apcaccess > apcaccess.log
TIMELEFT=$(grep "TIMELEFT" apcaccess.log | grep -o "[0-9.]*")
grep --color "STATUS\|BCHARGE\|" apcaccess.log
if (( ${TIMELEFT%.*} > 300 )); then
	echo
	print_colored "*** UPS ALARM ***"
	echo "- Please ask the field engineer to connect the power strip to the UPS port labeled \"MASTER\". It is currently connected to the \"Controlled by MASTER\"."
	sleep $(( LOG_SIZE / 7 + 1 ))
fi
