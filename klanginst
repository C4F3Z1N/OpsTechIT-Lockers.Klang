#!/bin/sh -e

URL_REPO="https://github.com/C4F3Z1N/OpsTechIT-Lockers.Klang"
URL_INSTALLER="${URL_REPO}/raw/refactoring/klanginst"
URL_PACKED="${URL_REPO}/archive/refactoring.zip"
URL_VENV="https://bootstrap.pypa.io/virtualenv/2.7/virtualenv.pyz"


colored_output() {
	local GREEN=92
	local MAGENTA=95
	local RED=91
	local YELLOW=93
	local NONE=0
	local TEXT="${@}"
	local COLOR

	case $(echo ${TEXT} | grep -o "\[.*\]") in
		*"ERROR"* | *"error"*)
			COLOR=${RED}
			;;
		*"INFO"* | *"info"*)
			COLOR=${YELLOW}
			;;
		*"WARN"* | *"warn"*)
			COLOR=${MAGENTA}
			;;
		*"DONE"* | *"done"*)
			COLOR=${GREEN}
			;;
	esac

	echo -e "\033[${COLOR}m${TEXT}\033[0m"
}


usage() {
	echo "Usage: "
	echo "wget -qO - \"${URL_INSTALLER}\" | \${SHELL}"
}


no_sudo() {
	if [ $(whoami) == "root" ]; then
		echo "[ERROR] Please DO NOT run this script as root/su/sudo." 1>&2
		exit 1
	fi
}


mkenvdir() {
	local DIR="$(mktemp -u)-pyenv"
	local VENV="$(mktemp -u)"

	download ${URL_VENV} ${VENV}

	python ${VENV} -q ${DIR}
	echo ${DIR}
}


download() {
	local SOURCE="${1}"
	local DEST="${2}"

	# echo "[INFO] Downloading:"
	# echo ${SOURCE}
	# curl -Lk# ${SOURCE} -o ${DEST}
	wget ${SOURCE} -qO ${DEST}
}

extract() {
	local SOURCE="${1}"
	local DEST="${2}"
	local TMPDIR="$(mktemp -d)"

	TOPLEVEL=$(
		unzip -l ${SOURCE} \
			| awk '{print $4}' \
			| grep -o ".*/" \
			| sort -u \
			| head -n 1 \
			| xargs basename \
	)

	ln -fs ${DEST} "${TMPDIR}/${TOPLEVEL}"
	unzip -oq ${SOURCE} -d ${TMPDIR}
}


fix_dependencies() {
	pip install \
		--no-python-version-warning \
		-qr requirements.txt
}


deploy() {
	mkdir -p ${HOME}/bin

	for EACH in $(find "${PWD}/src" -name "*.py"); do
		sed "s%#\!.*python.*%#\!${PWD}/bin/python%" -i ${EACH}
		chmod a+x ${EACH}
		ln -fs ${EACH} "${HOME}/bin/$(basename ${EACH%.*})"
	done
}


main() {
	# set -x
	no_sudo
	colored_output "[INFO] Downloading beta-klang!..."
	cd "$(mkenvdir)"
	PACKED="$(mktemp -u)"
	download ${URL_PACKED} ${PACKED}
	extract ${PACKED} ${PWD}
	source bin/activate

	colored_output "[INFO] Checking dependencies..."
	fix_dependencies
	deploy

	colored_output "[PASS] Installation completed!"
}

main
